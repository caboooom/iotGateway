Index: src/main/java/com/nhnacademy/aiot/node/SensorTypeFilterNode.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.nhnacademy.aiot.node;\n\nimport com.fasterxml.jackson.databind.JsonNode;\nimport com.fasterxml.jackson.databind.ObjectMapper;\nimport org.json.simple.JSONObject;\nimport com.nhnacademy.aiot.Msg;\nimport com.nhnacademy.aiot.Wire;\nimport com.nhnacademy.aiot.util.Config;\nimport lombok.extern.log4j.Log4j2;\n\n@Log4j2\npublic class SensorTypeFilterNode extends Node {\n\n    String[] sensorTypes;\n\n    public SensorTypeFilterNode(int inputPortCount, int outputPortCount) {\n        super(inputPortCount, outputPortCount);\n    }\n\n    @Override\n    public void preprocess() {\n        sensorTypes = Config.properties.getProperty(\"sensorTypes\").split(\",\");\n    }\n\n    @Override\n    public void process() {\n        for (Wire wire : inputPorts[0].getWires()) {\n            if (wire.hasMessage()) {\n                Msg msg = wire.get();\n                processMessage(msg);\n            }\n        }\n    }\n\n\n\n\n\n\n    private void processMessage(Msg msg) {\n        JSONObject payload = (JSONObject) msg.getPayload().get(\"object\");\n\n        if (payload == null) {\n            return;\n        }\n\n        String deviceId = (String) ((JSONObject) msg.getPayload().get(\"deviceInfo\")).get(\"devEui\");\n        String place =(String) ((JSONObject)((JSONObject) msg.getPayload().get(\"deviceInfo\")).get(\"tags\")).get(\"place\");\n\n        for (String sensor : sensorTypes) {\n            if (payload.get(sensor) != null) {\n                Msg outMsg = createMessage(deviceId, sensor, (Double) payload.get(sensor), place);\n                out(outMsg);\n            }\n        }\n    }\n\n\n    private Msg createMessage(String deviceId, String sensor, Double sensorValue, String place) {\n        Msg outMsg = new Msg();\n        outMsg.setTopic(\"/d/\" + deviceId + \"/p/\" + place + \"/e/\" + sensor);\n\n\n        JSONObject outPayload = new JSONObject();\n        outPayload.put(\"time\", System.currentTimeMillis());\n        outPayload.put(sensor, sensorValue);\n        outMsg.setPayload(outPayload);\n\n        return outMsg;\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/nhnacademy/aiot/node/SensorTypeFilterNode.java b/src/main/java/com/nhnacademy/aiot/node/SensorTypeFilterNode.java
--- a/src/main/java/com/nhnacademy/aiot/node/SensorTypeFilterNode.java	
+++ b/src/main/java/com/nhnacademy/aiot/node/SensorTypeFilterNode.java	
@@ -1,7 +1,5 @@
 package com.nhnacademy.aiot.node;
 
-import com.fasterxml.jackson.databind.JsonNode;
-import com.fasterxml.jackson.databind.ObjectMapper;
 import org.json.simple.JSONObject;
 import com.nhnacademy.aiot.Msg;
 import com.nhnacademy.aiot.Wire;
@@ -32,11 +30,6 @@
         }
     }
 
-
-
-
-
-
     private void processMessage(Msg msg) {
         JSONObject payload = (JSONObject) msg.getPayload().get("object");
 
@@ -60,7 +53,6 @@
         Msg outMsg = new Msg();
         outMsg.setTopic("/d/" + deviceId + "/p/" + place + "/e/" + sensor);
 
-
         JSONObject outPayload = new JSONObject();
         outPayload.put("time", System.currentTimeMillis());
         outPayload.put(sensor, sensorValue);
Index: src/main/java/com/nhnacademy/aiot/node/MqttInNode.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.nhnacademy.aiot.node;\n\nimport java.util.UUID;\nimport java.util.concurrent.CountDownLatch;\nimport java.util.concurrent.TimeUnit;\nimport org.eclipse.paho.client.mqttv3.IMqttClient;\nimport org.eclipse.paho.client.mqttv3.IMqttMessageListener;\nimport org.eclipse.paho.client.mqttv3.MqttClient;\nimport org.eclipse.paho.client.mqttv3.MqttConnectOptions;\nimport org.eclipse.paho.client.mqttv3.MqttException;\nimport org.json.simple.JSONObject;\nimport org.json.simple.parser.ParseException;\nimport com.nhnacademy.aiot.Msg;\nimport com.nhnacademy.aiot.util.JSONUtils;\n\npublic class MqttInNode extends Node{\n\n    public MqttInNode(int outputWireCount) {\n        super(0 ,outputWireCount);\n    }\n\n    public Msg createMsg(String topic, String payload){\n            if(JSONUtils.isJson(payload)){\n                    try {\n                        JSONObject jsonObject = (JSONObject) JSONUtils.getParser().parse(payload);\n                        return new Msg(topic, jsonObject);\n\n                    } catch (ParseException e) {\n                        //error count++\n                    }\n            }\n            return null;\n    }\n\n    @Override\n    public void process() {\n        String publisherId = UUID.randomUUID().toString();\n        try (IMqttClient client = new MqttClient(\"tcp://ems.nhnacademy.com:1883\", publisherId)) {\n\n            setMqttOptions();\n\n            client.connect();\n            CountDownLatch receivedSignal = new CountDownLatch(50);\n            IMqttMessageListener listener = (topic, msg) -> {\n                String payload = new String(msg.getPayload());\n                Msg outMsg = createMsg(topic, payload);\n                if (outMsg != null) {\n                    out(outMsg);\n                }\n                receivedSignal.countDown();\n            };\n            String[] topics = {\"+/+/device/+/+/up\",\"+/+/device/+/+/up\"}; // 여러 토픽\n            client.subscribe( topics , new IMqttMessageListener[] {listener,listener} );\n            receivedSignal.await(1, TimeUnit.MINUTES);\n            client.disconnect();\n        } catch (MqttException e) {\n            e.printStackTrace();\n        } \n         catch (InterruptedException e) {\n             e.printStackTrace();\n        }\n        \n    }\n\n    private MqttConnectOptions setMqttOptions() {\n        MqttConnectOptions options = new MqttConnectOptions();\n        options.setAutomaticReconnect(true);\n        options.setCleanSession(true);\n        options.setConnectionTimeout(10);\n        options.setWill(\"test/will\", \"Disconnected\".getBytes(), 1, false);\n        return options;\n    }\n\n\n    \n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/nhnacademy/aiot/node/MqttInNode.java b/src/main/java/com/nhnacademy/aiot/node/MqttInNode.java
--- a/src/main/java/com/nhnacademy/aiot/node/MqttInNode.java	
+++ b/src/main/java/com/nhnacademy/aiot/node/MqttInNode.java	
@@ -49,6 +49,7 @@
                 }
                 receivedSignal.countDown();
             };
+
             String[] topics = {"+/+/device/+/+/up","+/+/device/+/+/up"}; // 여러 토픽
             client.subscribe( topics , new IMqttMessageListener[] {listener,listener} );
             receivedSignal.await(1, TimeUnit.MINUTES);
Index: src/main/java/com/nhnacademy/aiot/Main.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.nhnacademy.aiot;\n<<<<<<< HEAD\nimport com.fasterxml.jackson.databind.JsonNode;\nimport com.fasterxml.jackson.databind.ObjectMapper;\nimport org.eclipse.paho.client.mqttv3.*;\nimport org.eclipse.paho.client.mqttv3.persist.MemoryPersistence;\nimport java.nio.charset.StandardCharsets;\n\npublic class Main {\n    static String broker = \"tcp://ems.nhnacademy.com:1883\";\n    static String clientId = \"JavaMqttClient\";\n    static String topics = \"#\";\n\n    // Todo 조건문 -> 다형성\n    // Todo CLI\n\n    public static void main(String[] args) throws MqttException {\n\n        try {\n            IMqttClient publisher = new MqttClient(broker, clientId, new MemoryPersistence());\n            MqttConnectOptions options = new MqttConnectOptions();\n            ObjectMapper objm = new ObjectMapper();\n\n            connectToBroker(options, publisher);\n            mqttMethod(publisher);\n            publisher.subscribe(topics, (topic, msg) -> {\n\n                String[] topicList  = topic.split(\"/\");\n\n                // TODO Json Parsing\n                // TODO split 없이 사용할 수 있는 mqtt Method 찾기\n\n                if (\"application\".equals(topicList[0])){\n                    String jsonString = msg.toString();\n                    JsonNode jsonNode = objm.readTree(jsonString);\n\n                    // Todo 필요한 값 추출\n                    String time = jsonNode.path(\"time\").asText();\n                    String humidity = jsonNode.path(\"object\").path(\"humidity\").asText();\n                    String temperature = jsonNode.path(\"object\").path(\"temperature\").asText();\n                    String co2 = jsonNode.path(\"object\").path(\"co2\").asText();\n                    String leq = jsonNode.path(\"object\").path(\"leq\").asText();\n                    String lmax = jsonNode.path(\"object\").path(\"lmax\").asText();\n                    String tvoc = jsonNode.path(\"object\").path(\"tvoc\").asText();\n\n                    System.out.println(\"시간: \" + time);\n                    System.out.println(\"습도: \" + humidity);\n                    System.out.println(\"온도: \" + temperature);\n                    System.out.println(\"co2: \" + co2);\n                    System.out.println(\"leq: \" + leq);\n                    System.out.println(\"lmax: \" +lmax);\n                    System.out.println(\"tvoc: \" + tvoc);\n                }\n\n            });\n\n            while (!Thread.interrupted()) {\n                Thread.sleep(1000);\n            }\n\n            publisher.disconnect();\n\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n    }\n\n    private static void mqttMethod(IMqttClient publisher) {\n\n        publisher.setCallback(new MqttCallback() {\n\n            //MQTT Broker 연결이 끊길때\n            @Override\n            public void connectionLost(Throwable throwable) {\n                System.out.println(\"Disconnected\");\n            }\n\n            // 구독한 토픽에 새로운 메시지가 도착했을 때 호출.\n            @Override\n            public void messageArrived(String s, MqttMessage mqttMessage) throws Exception {\n                String payloadString = new String(mqttMessage.getPayload(), StandardCharsets.UTF_8);\n            }\n\n            // 메시지 전송이 끝났을 때, qos 1 or 2에서만 사용됨\n            @Override\n            public void deliveryComplete(IMqttDeliveryToken iMqttDeliveryToken) {\n                System.out.println(\"전송완료\");\n            }\n        });\n    }\n\n    private static void connectToBroker(MqttConnectOptions options, IMqttClient publisher) throws MqttException {\n        options.setAutomaticReconnect(true);\n        options.setCleanSession(true);\n        options.setConnectionTimeout(10);\n        options.setWill(\"willTopic\", \"연결끊김\".getBytes(), 1, false);\n        System.out.println(\"Connecting to Broker:\" + broker);\n        publisher.connect(options);\n        System.out.println(\"연결 완료\");\n    }\n}\n\n=======\n\nimport com.nhnacademy.aiot.node.DebugNode;\nimport com.nhnacademy.aiot.node.MqttInNode;\nimport com.nhnacademy.aiot.node.MqttOutNode;\nimport com.nhnacademy.aiot.node.Node;\nimport com.nhnacademy.aiot.node.SensorTypeFilterNode;\nimport com.nhnacademy.aiot.util.Config;\n\n\npublic class Main {\n\n    public static void main(String[] args) {\n        Config command = new Config();\n        command.set(args);\n\n        MqttInNode mqttInNode = new MqttInNode(2);\n        MqttOutNode mqttOutNode = new MqttOutNode(1);\n        SensorTypeFilterNode filterNode = new SensorTypeFilterNode(1, 1);\n        Node debugNode = new DebugNode();\n\n        Wire wire = new Wire();\n        Wire wire1 = new Wire();\n        Wire wire2 = new Wire();\n      \n\n        mqttInNode.setOutputWire(0, wire);\n        filterNode.setInputWire(0, wire);\n\n        filterNode.setOutputWire(0, wire1);\n        filterNode.setOutputWire(0, wire2);\n\n        debugNode.setInputWire(0,  wire1);\n\n        mqttOutNode.setInputWire(0, wire2);\n\n        mqttInNode.start();\n        mqttOutNode.start();\n        debugNode.start();\n        filterNode.start();\n        \n\n       \n    }\n\n}\n>>>>>>> origin/develop\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/nhnacademy/aiot/Main.java b/src/main/java/com/nhnacademy/aiot/Main.java
--- a/src/main/java/com/nhnacademy/aiot/Main.java	
+++ b/src/main/java/com/nhnacademy/aiot/Main.java	
@@ -1,106 +1,4 @@
 package com.nhnacademy.aiot;
-<<<<<<< HEAD
-import com.fasterxml.jackson.databind.JsonNode;
-import com.fasterxml.jackson.databind.ObjectMapper;
-import org.eclipse.paho.client.mqttv3.*;
-import org.eclipse.paho.client.mqttv3.persist.MemoryPersistence;
-import java.nio.charset.StandardCharsets;
-
-public class Main {
-    static String broker = "tcp://ems.nhnacademy.com:1883";
-    static String clientId = "JavaMqttClient";
-    static String topics = "#";
-
-    // Todo 조건문 -> 다형성
-    // Todo CLI
-
-    public static void main(String[] args) throws MqttException {
-
-        try {
-            IMqttClient publisher = new MqttClient(broker, clientId, new MemoryPersistence());
-            MqttConnectOptions options = new MqttConnectOptions();
-            ObjectMapper objm = new ObjectMapper();
-
-            connectToBroker(options, publisher);
-            mqttMethod(publisher);
-            publisher.subscribe(topics, (topic, msg) -> {
-
-                String[] topicList  = topic.split("/");
-
-                // TODO Json Parsing
-                // TODO split 없이 사용할 수 있는 mqtt Method 찾기
-
-                if ("application".equals(topicList[0])){
-                    String jsonString = msg.toString();
-                    JsonNode jsonNode = objm.readTree(jsonString);
-
-                    // Todo 필요한 값 추출
-                    String time = jsonNode.path("time").asText();
-                    String humidity = jsonNode.path("object").path("humidity").asText();
-                    String temperature = jsonNode.path("object").path("temperature").asText();
-                    String co2 = jsonNode.path("object").path("co2").asText();
-                    String leq = jsonNode.path("object").path("leq").asText();
-                    String lmax = jsonNode.path("object").path("lmax").asText();
-                    String tvoc = jsonNode.path("object").path("tvoc").asText();
-
-                    System.out.println("시간: " + time);
-                    System.out.println("습도: " + humidity);
-                    System.out.println("온도: " + temperature);
-                    System.out.println("co2: " + co2);
-                    System.out.println("leq: " + leq);
-                    System.out.println("lmax: " +lmax);
-                    System.out.println("tvoc: " + tvoc);
-                }
-
-            });
-
-            while (!Thread.interrupted()) {
-                Thread.sleep(1000);
-            }
-
-            publisher.disconnect();
-
-        } catch (Exception e) {
-            e.printStackTrace();
-        }
-    }
-
-    private static void mqttMethod(IMqttClient publisher) {
-
-        publisher.setCallback(new MqttCallback() {
-
-            //MQTT Broker 연결이 끊길때
-            @Override
-            public void connectionLost(Throwable throwable) {
-                System.out.println("Disconnected");
-            }
-
-            // 구독한 토픽에 새로운 메시지가 도착했을 때 호출.
-            @Override
-            public void messageArrived(String s, MqttMessage mqttMessage) throws Exception {
-                String payloadString = new String(mqttMessage.getPayload(), StandardCharsets.UTF_8);
-            }
-
-            // 메시지 전송이 끝났을 때, qos 1 or 2에서만 사용됨
-            @Override
-            public void deliveryComplete(IMqttDeliveryToken iMqttDeliveryToken) {
-                System.out.println("전송완료");
-            }
-        });
-    }
-
-    private static void connectToBroker(MqttConnectOptions options, IMqttClient publisher) throws MqttException {
-        options.setAutomaticReconnect(true);
-        options.setCleanSession(true);
-        options.setConnectionTimeout(10);
-        options.setWill("willTopic", "연결끊김".getBytes(), 1, false);
-        System.out.println("Connecting to Broker:" + broker);
-        publisher.connect(options);
-        System.out.println("연결 완료");
-    }
-}
-
-=======
 
 import com.nhnacademy.aiot.node.DebugNode;
 import com.nhnacademy.aiot.node.MqttInNode;
@@ -146,4 +44,3 @@
     }
 
 }
->>>>>>> origin/develop
Index: pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd\">\n  <modelVersion>4.0.0</modelVersion>\n  <groupId>com.nhnacademy.aiot</groupId>\n  <artifactId>iotGateway</artifactId>\n  <version>1.0-SNAPSHOT</version>\n  <properties>\n    <maven.compiler.source>1.8</maven.compiler.source>\n    <maven.compiler.target>1.8</maven.compiler.target>\n    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n    <junit.version>5.6.0</junit.version>\n    <maven-enforcer-plugin.version>3.0.0-M3</maven-enforcer-plugin.version>\n    <maven-checkstyle-plugin.version>3.1.2</maven-checkstyle-plugin.version>\n    <checkstyle.version>8.45.1</checkstyle.version>\n    <maven-surefire-plugin.version>3.0.0-M5</maven-surefire-plugin.version>\n    <jacoco-maven-plugin.version>0.8.4</jacoco-maven-plugin.version>\n    <maven-javadoc-plugin.version>3.0.0</maven-javadoc-plugin.version>\n    <!-- JaCoCo thresholds. Increase gradually as you add tests. -->\n    <jacoco.unit-tests.limit.instruction-ratio>0%</jacoco.unit-tests.limit.instruction-ratio>\n    <jacoco.unit-tests.limit.branch-ratio>0%</jacoco.unit-tests.limit.branch-ratio>\n    <jacoco.unit-tests.limit.class-complexity>20</jacoco.unit-tests.limit.class-complexity>\n    <jacoco.unit-tests.limit.method-complexity>5</jacoco.unit-tests.limit.method-complexity>\n  </properties>\n  <dependencies>\n\n<dependency>\n    <groupId>commons-cli</groupId>\n    <artifactId>commons-cli</artifactId>\n    <version>1.4</version>\n</dependency>\n\n      <dependency>\n      <groupId>org.apache.logging.log4j</groupId>\n      <artifactId>log4j-api</artifactId>\n      <version>2.20.0</version>\n    </dependency>\n    <dependency>\n      <groupId>org.apache.logging.log4j</groupId>\n      <artifactId>log4j-core</artifactId>\n      <version>2.20.0</version>\n    </dependency>\n<dependency>\n  <groupId>org.eclipse.paho</groupId>\n  <artifactId>org.eclipse.paho.client.mqttv3</artifactId>\n  <version>1.2.5</version>\n</dependency>\n<dependency>\n    <groupId>org.projectlombok</groupId>\n    <artifactId>lombok</artifactId>\n    <version>1.18.24</version>\n    <scope>provided</scope>\n</dependency>\n<dependency>\n    <groupId>com.googlecode.json-simple</groupId>\n    <artifactId>json-simple</artifactId>\n    <version>1.1.1</version>\n</dependency>\n\n    <dependency>\n      <groupId>org.junit.jupiter</groupId>\n      <artifactId>junit-jupiter-api</artifactId>\n      <version>${junit.version}</version>\n      <scope>test</scope>\n    </dependency>\n    <dependency>\n      <groupId>org.junit.jupiter</groupId>\n      <artifactId>junit-jupiter-engine</artifactId>\n      <version>${junit.version}</version>\n      <scope>test</scope>\n    </dependency>\n  </dependencies>\n  <build>\n    <plugins>\n      <plugin>\n        <groupId>org.apache.maven.plugins</groupId>\n        <artifactId>maven-enforcer-plugin</artifactId>\n        <version>${maven-enforcer-plugin.version}</version>\n        <executions>\n          <execution>\n            <goals>\n              <goal>enforce</goal>\n            </goals>\n            <configuration>\n              <rules>\n                <requireMavenVersion>\n                  <version>3.6.3</version>\n                </requireMavenVersion>\n              </rules>\n              <fail>true</fail>\n            </configuration>\n          </execution>\n        </executions>\n      </plugin>\n      <plugin>\n        <groupId>org.apache.maven.plugins</groupId>\n        <artifactId>maven-checkstyle-plugin</artifactId>\n        <version>${maven-checkstyle-plugin.version}</version>\n        <dependencies>\n            <dependency>\n                <groupId>org.eclipse.paho</groupId>\n                <artifactId>org.eclipse.paho.client.mqttv3</artifactId>\n                <version>1.2.5</version>\n            </dependency>\n          <dependency>\n            <groupId>com.puppycrawl.tools</groupId>\n            <artifactId>checkstyle</artifactId>\n            <version>${checkstyle.version}</version>\n          </dependency>\n          <dependency>\n            <groupId>com.github.ngeor</groupId>\n            <artifactId>checkstyle-rules</artifactId>\n            <version>4.9.3</version>\n          </dependency>\n        </dependencies>\n        <configuration>\n          <configLocation>com/github/ngeor/checkstyle.xml</configLocation>\n          <includeTestSourceDirectory>true</includeTestSourceDirectory>\n          <skip>${skipTests}</skip>\n        </configuration>\n        <executions>\n          <execution>\n            <id>checkstyle</id>\n            <phase>validate</phase>\n            <goals>\n              <goal>check</goal>\n            </goals>\n          </execution>\n        </executions>\n      </plugin>\n      <plugin>\n        <groupId>org.apache.maven.plugins</groupId>\n        <artifactId>maven-surefire-plugin</artifactId>\n        <version>${maven-surefire-plugin.version}</version>\n      </plugin>\n      <plugin>\n        <groupId>org.jacoco</groupId>\n        <artifactId>jacoco-maven-plugin</artifactId>\n        <version>${jacoco-maven-plugin.version}</version>\n        <executions>\n          <execution>\n            <id>pre-unit-test</id>\n            <goals>\n              <goal>prepare-agent</goal>\n            </goals>\n          </execution>\n          <execution>\n            <id>post-unit-test</id>\n            <phase>test</phase>\n            <goals>\n              <goal>report</goal>\n            </goals>\n          </execution>\n          <execution>\n            <id>check-unit-test</id>\n            <phase>test</phase>\n            <goals>\n              <goal>check</goal>\n            </goals>\n            <configuration>\n              <dataFile>${project.build.directory}/jacoco.exec</dataFile>\n              <rules>\n                <rule>\n                  <element>BUNDLE</element>\n                  <limits>\n                    <limit>\n                      <counter>INSTRUCTION</counter>\n                      <value>COVEREDRATIO</value>\n                      <minimum>${jacoco.unit-tests.limit.instruction-ratio}</minimum>\n                    </limit>\n                    <limit>\n                      <counter>BRANCH</counter>\n                      <value>COVEREDRATIO</value>\n                      <minimum>${jacoco.unit-tests.limit.branch-ratio}</minimum>\n                    </limit>\n                  </limits>\n                </rule>\n                <rule>\n                  <element>CLASS</element>\n                  <limits>\n                    <limit>\n                      <counter>COMPLEXITY</counter>\n                      <value>TOTALCOUNT</value>\n                      <maximum>${jacoco.unit-tests.limit.class-complexity}</maximum>\n                    </limit>\n                  </limits>\n                </rule>\n                <rule>\n                  <element>METHOD</element>\n                  <limits>\n                    <limit>\n                      <counter>COMPLEXITY</counter>\n                      <value>TOTALCOUNT</value>\n                      <maximum>${jacoco.unit-tests.limit.method-complexity}</maximum>\n                    </limit>\n                  </limits>\n                </rule>\n              </rules>\n            </configuration>\n          </execution>\n        </executions>\n      </plugin>\n    </plugins>\n  </build>\n  <reporting>\n    <plugins>\n      <plugin>\n        <groupId>org.apache.maven.plugins</groupId>\n        <artifactId>maven-javadoc-plugin</artifactId>\n        <version>${maven-javadoc-plugin.version}</version>\n      </plugin>\n    </plugins>\n  </reporting>\n</project>\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/pom.xml b/pom.xml
--- a/pom.xml	
+++ b/pom.xml	
@@ -67,6 +67,11 @@
       <version>${junit.version}</version>
       <scope>test</scope>
     </dependency>
+      <dependency>
+          <groupId>com.fasterxml.jackson.core</groupId>
+          <artifactId>jackson-databind</artifactId>
+          <version>2.15.2</version>
+      </dependency>
   </dependencies>
   <build>
     <plugins>
Index: src/main/java/com/nhnacademy/aiot/util/Config.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.nhnacademy.aiot.util;\n\nimport java.util.Properties;\nimport org.apache.commons.cli.CommandLine;\nimport org.apache.commons.cli.CommandLineParser;\nimport org.apache.commons.cli.DefaultParser;\nimport org.apache.commons.cli.Options;\n\npublic class Config {\n\n    public static Properties properties = new Properties();\n\n    public void set(String[] args) {\n\n        Options options = new Options();\n        options.addOption(null, \"an\", true, null);\n        options.addOption(\"s\", null, true, null);\n        options.addOption(\"c\", null, true, null);\n        CommandLineParser cParser = new DefaultParser();\n\n        try {\n            CommandLine commandLine = cParser.parse(options, args);\n\n            if (commandLine.hasOption(\"an\")) {\n            }\n\n            if (commandLine.hasOption(\"s\")) {\n                properties.setProperty(\"sensorTypes\", commandLine.getOptionValue(\"s\"));\n            }\n\n            if (commandLine.hasOption(\"c\")) {\n                String jsonFilePath = commandLine.getOptionValue(\"c\");\n            }\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n    }\n\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/nhnacademy/aiot/util/Config.java b/src/main/java/com/nhnacademy/aiot/util/Config.java
--- a/src/main/java/com/nhnacademy/aiot/util/Config.java	
+++ b/src/main/java/com/nhnacademy/aiot/util/Config.java	
@@ -14,8 +14,9 @@
 
         Options options = new Options();
         options.addOption(null, "an", true, null);
-        options.addOption("s", null, true, null);
-        options.addOption("c", null, true, null);
+        options.addOption("s", null, true, "sensorsType");
+        options.addOption("c", null, true, "configFile");
+
         CommandLineParser cParser = new DefaultParser();
 
         try {
Index: log/2023-11-30.log
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>[INFO] 2023-11-30T09:25:28  [Node] MqttInNode - start\n[INFO] 2023-11-30T09:25:28  [Node] MqttOutNode - start\n[INFO] 2023-11-30T09:25:28  [Node] DebugNode - start\n[DEBUG] 2023-11-30T09:25:33  [DebugNode] {topic : \"24e124126d152590/d/temperature\", payload :{\"temperature\":16.8,\"time\":1701303933264}}\n[DEBUG] 2023-11-30T09:25:33  [DebugNode] {topic : \"24e124126d152590/d/humidity\", payload :{\"humidity\":32.0,\"time\":1701303933264}}\n[DEBUG] 2023-11-30T09:25:33  [DebugNode] {topic : \"24e124126d152590/d/co2\", payload :{\"co2\":562.0,\"time\":1701303933264}}\n[DEBUG] 2023-11-30T09:25:33  [DebugNode] {topic : \"24e124126d152590/d/temperature\", payload :{\"temperature\":16.8,\"time\":1701303933364}}\n[DEBUG] 2023-11-30T09:25:33  [DebugNode] {topic : \"24e124126d152590/d/humidity\", payload :{\"humidity\":32.0,\"time\":1701303933364}}\n[DEBUG] 2023-11-30T09:25:33  [DebugNode] {topic : \"24e124126d152590/d/co2\", payload :{\"co2\":562.0,\"time\":1701303933364}}\n[DEBUG] 2023-11-30T09:25:34  [DebugNode] {topic : \"24e124136d151368/d/temperature\", payload :{\"temperature\":23.3,\"time\":1701303934266}}\n[DEBUG] 2023-11-30T09:25:34  [DebugNode] {topic : \"24e124136d151368/d/humidity\", payload :{\"humidity\":18.0,\"time\":1701303934266}}\n[DEBUG] 2023-11-30T09:25:34  [DebugNode] {topic : \"24e124136d151368/d/temperature\", payload :{\"temperature\":23.3,\"time\":1701303934366}}\n[DEBUG] 2023-11-30T09:25:34  [DebugNode] {topic : \"24e124136d151368/d/humidity\", payload :{\"humidity\":18.0,\"time\":1701303934366}}\n[DEBUG] 2023-11-30T09:25:35  [DebugNode] {topic : \"24e124785c421885/d/temperature\", payload :{\"temperature\":20.400000000000002,\"time\":1701303935067}}\n[DEBUG] 2023-11-30T09:25:35  [DebugNode] {topic : \"24e124785c421885/d/humidity\", payload :{\"humidity\":30.0,\"time\":1701303935067}}\n[DEBUG] 2023-11-30T09:25:38  [DebugNode] {topic : \"24e124785c389010/d/temperature\", payload :{\"temperature\":20.0,\"time\":1701303938274}}\n[DEBUG] 2023-11-30T09:25:38  [DebugNode] {topic : \"24e124785c389010/d/humidity\", payload :{\"humidity\":24.5,\"time\":1701303938274}}\n[DEBUG] 2023-11-30T09:25:39  [DebugNode] {topic : \"24e124126d152969/d/temperature\", payload :{\"temperature\":19.0,\"time\":1701303939276}}\n[DEBUG] 2023-11-30T09:25:39  [DebugNode] {topic : \"24e124126d152969/d/humidity\", payload :{\"humidity\":36.0,\"time\":1701303939276}}\n[DEBUG] 2023-11-30T09:25:46  [DebugNode] {topic : \"24e124136d151547/d/temperature\", payload :{\"temperature\":18.6,\"time\":1701303946794}}\n[DEBUG] 2023-11-30T09:25:46  [DebugNode] {topic : \"24e124136d151547/d/humidity\", payload :{\"humidity\":21.0,\"time\":1701303946794}}\n[DEBUG] 2023-11-30T09:25:50  [DebugNode] {topic : \"24e124128c067999/d/temperature\", payload :{\"temperature\":20.900000000000002,\"time\":1701303950202}}\n[DEBUG] 2023-11-30T09:25:50  [DebugNode] {topic : \"24e124128c067999/d/humidity\", payload :{\"humidity\":27.5,\"time\":1701303950202}}\n[DEBUG] 2023-11-30T09:25:50  [DebugNode] {topic : \"24e124128c067999/d/co2\", payload :{\"co2\":1257.0,\"time\":1701303950202}}\n[DEBUG] 2023-11-30T09:25:50  [DebugNode] {topic : \"24e124128c067999/d/temperature\", payload :{\"temperature\":20.900000000000002,\"time\":1701303950302}}\n[DEBUG] 2023-11-30T09:25:50  [DebugNode] {topic : \"24e124128c067999/d/humidity\", payload :{\"humidity\":27.5,\"time\":1701303950302}}\n[DEBUG] 2023-11-30T09:25:50  [DebugNode] {topic : \"24e124128c067999/d/co2\", payload :{\"co2\":1257.0,\"time\":1701303950302}}\n[DEBUG] 2023-11-30T09:26:14  [DebugNode] {topic : \"24e124785c389818/d/temperature\", payload :{\"temperature\":19.6,\"time\":1701303974463}}\n[DEBUG] 2023-11-30T09:26:14  [DebugNode] {topic : \"24e124785c389818/d/humidity\", payload :{\"humidity\":33.0,\"time\":1701303974463}}\n[DEBUG] 2023-11-30T09:26:19  [DebugNode] {topic : \"24e124128c140101/d/temperature\", payload :{\"temperature\":19.1,\"time\":1701303979173}}\n[DEBUG] 2023-11-30T09:26:19  [DebugNode] {topic : \"24e124128c140101/d/humidity\", payload :{\"humidity\":24.5,\"time\":1701303979173}}\n[DEBUG] 2023-11-30T09:26:19  [DebugNode] {topic : \"24e124128c140101/d/co2\", payload :{\"co2\":642.0,\"time\":1701303979173}}\n[DEBUG] 2023-11-30T09:26:27  [DebugNode] {topic : \"24e124126d152919/d/temperature\", payload :{\"temperature\":20.900000000000002,\"time\":1701303987694}}\n[DEBUG] 2023-11-30T09:26:27  [DebugNode] {topic : \"24e124126d152919/d/humidity\", payload :{\"humidity\":24.5,\"time\":1701303987694}}\n[DEBUG] 2023-11-30T09:26:34  [DebugNode] {topic : \"24e124136d151368/d/temperature\", payload :{\"temperature\":23.5,\"time\":1701303994305}}\n[DEBUG] 2023-11-30T09:26:34  [DebugNode] {topic : \"24e124136d151368/d/humidity\", payload :{\"humidity\":18.0,\"time\":1701303994305}}\n[DEBUG] 2023-11-30T09:26:35  [DebugNode] {topic : \"24e124785c421885/d/temperature\", payload :{\"temperature\":20.400000000000002,\"time\":1701303995107}}\n[DEBUG] 2023-11-30T09:26:35  [DebugNode] {topic : \"24e124785c421885/d/humidity\", payload :{\"humidity\":30.0,\"time\":1701303995107}}\n[DEBUG] 2023-11-30T09:26:38  [DebugNode] {topic : \"24e124785c389010/d/temperature\", payload :{\"temperature\":20.0,\"time\":1701303998214}}\n[DEBUG] 2023-11-30T09:26:38  [DebugNode] {topic : \"24e124785c389010/d/humidity\", payload :{\"humidity\":24.0,\"time\":1701303998214}}\n[DEBUG] 2023-11-30T09:26:46  [DebugNode] {topic : \"24e124136d151547/d/temperature\", payload :{\"temperature\":18.8,\"time\":1701304006834}}\n[DEBUG] 2023-11-30T09:26:46  [DebugNode] {topic : \"24e124136d151547/d/humidity\", payload :{\"humidity\":21.0,\"time\":1701304006834}}\n[DEBUG] 2023-11-30T09:26:50  [DebugNode] {topic : \"24e124128c067999/d/temperature\", payload :{\"temperature\":20.8,\"time\":1701304010440}}\n[DEBUG] 2023-11-30T09:26:50  [DebugNode] {topic : \"24e124128c067999/d/humidity\", payload :{\"humidity\":27.5,\"time\":1701304010440}}\n[DEBUG] 2023-11-30T09:26:50  [DebugNode] {topic : \"24e124128c067999/d/co2\", payload :{\"co2\":1222.0,\"time\":1701304010440}}\n[DEBUG] 2023-11-30T09:27:14  [DebugNode] {topic : \"24e124785c389818/d/temperature\", payload :{\"temperature\":19.700000000000003,\"time\":1701304034690}}\n[DEBUG] 2023-11-30T09:27:14  [DebugNode] {topic : \"24e124785c389818/d/humidity\", payload :{\"humidity\":33.0,\"time\":1701304034690}}\n[DEBUG] 2023-11-30T09:27:19  [DebugNode] {topic : \"24e124128c140101/d/temperature\", payload :{\"temperature\":19.200000000000003,\"time\":1701304039101}}\n[DEBUG] 2023-11-30T09:27:19  [DebugNode] {topic : \"24e124128c140101/d/humidity\", payload :{\"humidity\":24.0,\"time\":1701304039101}}\n[DEBUG] 2023-11-30T09:27:19  [DebugNode] {topic : \"24e124128c140101/d/co2\", payload :{\"co2\":642.0,\"time\":1701304039101}}\n[DEBUG] 2023-11-30T09:27:34  [DebugNode] {topic : \"24e124136d151368/d/temperature\", payload :{\"temperature\":23.5,\"time\":1701304054231}}\n[DEBUG] 2023-11-30T09:27:34  [DebugNode] {topic : \"24e124136d151368/d/humidity\", payload :{\"humidity\":18.0,\"time\":1701304054231}}\n[DEBUG] 2023-11-30T09:27:35  [DebugNode] {topic : \"24e124126d152590/d/temperature\", payload :{\"temperature\":16.8,\"time\":1701304055133}}\n[DEBUG] 2023-11-30T09:27:35  [DebugNode] {topic : \"24e124126d152590/d/humidity\", payload :{\"humidity\":32.0,\"time\":1701304055133}}\n[DEBUG] 2023-11-30T09:27:35  [DebugNode] {topic : \"24e124126d152590/d/co2\", payload :{\"co2\":543.0,\"time\":1701304055133}}\n[DEBUG] 2023-11-30T09:27:35  [DebugNode] {topic : \"24e124785c421885/d/temperature\", payload :{\"temperature\":20.400000000000002,\"time\":1701304055234}}\n[DEBUG] 2023-11-30T09:27:35  [DebugNode] {topic : \"24e124785c421885/d/humidity\", payload :{\"humidity\":30.0,\"time\":1701304055234}}\n[DEBUG] 2023-11-30T09:27:38  [DebugNode] {topic : \"24e124785c389010/d/temperature\", payload :{\"temperature\":20.0,\"time\":1701304058241}}\n[DEBUG] 2023-11-30T09:27:38  [DebugNode] {topic : \"24e124785c389010/d/humidity\", payload :{\"humidity\":24.0,\"time\":1701304058241}}\n[DEBUG] 2023-11-30T09:27:40  [DebugNode] {topic : \"24e124126d152969/d/temperature\", payload :{\"temperature\":19.0,\"time\":1701304060946}}\n[DEBUG] 2023-11-30T09:27:41  [DebugNode] {topic : \"24e124126d152969/d/humidity\", payload :{\"humidity\":36.0,\"time\":1701304060946}}\n[DEBUG] 2023-11-30T09:27:43  [DebugNode] {topic : \"24e124126c457594/d/temperature\", payload :{\"temperature\":4.3,\"time\":1701304063051}}\n[DEBUG] 2023-11-30T09:27:46  [DebugNode] {topic : \"24e124136d151547/d/temperature\", payload :{\"temperature\":18.8,\"time\":1701304066856}}\n[DEBUG] 2023-11-30T09:27:46  [DebugNode] {topic : \"24e124136d151547/d/humidity\", payload :{\"humidity\":21.0,\"time\":1701304066856}}\n[DEBUG] 2023-11-30T09:27:50  [DebugNode] {topic : \"24e124128c067999/d/temperature\", payload :{\"temperature\":20.900000000000002,\"time\":1701304070161}}\n[DEBUG] 2023-11-30T09:27:50  [DebugNode] {topic : \"24e124128c067999/d/humidity\", payload :{\"humidity\":27.0,\"time\":1701304070161}}\n[DEBUG] 2023-11-30T09:27:50  [DebugNode] {topic : \"24e124128c067999/d/co2\", payload :{\"co2\":1222.0,\"time\":1701304070161}}\n[DEBUG] 2023-11-30T09:27:57  [DebugNode] {topic : \"24e124136d150970/d/temperature\", payload :{\"temperature\":17.0,\"time\":1701304077375}}\n[DEBUG] 2023-11-30T09:27:57  [DebugNode] {topic : \"24e124136d150970/d/humidity\", payload :{\"humidity\":27.5,\"time\":1701304077375}}\n[DEBUG] 2023-11-30T09:28:14  [DebugNode] {topic : \"24e124785c389818/d/temperature\", payload :{\"temperature\":19.700000000000003,\"time\":1701304094613}}\n[DEBUG] 2023-11-30T09:28:14  [DebugNode] {topic : \"24e124785c389818/d/humidity\", payload :{\"humidity\":33.5,\"time\":1701304094613}}\n[DEBUG] 2023-11-30T09:28:19  [DebugNode] {topic : \"24e124128c140101/d/temperature\", payload :{\"temperature\":19.3,\"time\":1701304099124}}\n[DEBUG] 2023-11-30T09:28:19  [DebugNode] {topic : \"24e124128c140101/d/humidity\", payload :{\"humidity\":24.0,\"time\":1701304099124}}\n[DEBUG] 2023-11-30T09:28:19  [DebugNode] {topic : \"24e124128c140101/d/co2\", payload :{\"co2\":647.0,\"time\":1701304099124}}\n[DEBUG] 2023-11-30T09:28:19  [DebugNode] {topic : \"24e124128c140101/d/temperature\", payload :{\"temperature\":19.3,\"time\":1701304099224}}\n[DEBUG] 2023-11-30T09:28:19  [DebugNode] {topic : \"24e124128c140101/d/humidity\", payload :{\"humidity\":24.0,\"time\":1701304099224}}\n[DEBUG] 2023-11-30T09:28:19  [DebugNode] {topic : \"24e124128c140101/d/co2\", payload :{\"co2\":647.0,\"time\":1701304099224}}\n[INFO] 2023-11-30T09:28:28  MqttInNode - start\n[INFO] 2023-11-30T09:28:28  DebugNode - start\n[INFO] 2023-11-30T09:28:28  MqttOutNode - start\n[DEBUG] 2023-11-30T09:28:29  {topic : \"24e124126d152919/d/temperature\", payload :{\"temperature\":20.8,\"time\":1701304109503}}\n[DEBUG] 2023-11-30T09:28:29  {topic : \"24e124126d152919/d/humidity\", payload :{\"humidity\":24.5,\"time\":1701304109503}}\n[DEBUG] 2023-11-30T09:28:34  {topic : \"24e124136d151368/d/temperature\", payload :{\"temperature\":23.6,\"time\":1701304114212}}\n[DEBUG] 2023-11-30T09:28:34  {topic : \"24e124136d151368/d/humidity\", payload :{\"humidity\":18.0,\"time\":1701304114212}}\n[DEBUG] 2023-11-30T09:28:35  {topic : \"24e124785c421885/d/temperature\", payload :{\"temperature\":20.400000000000002,\"time\":1701304115113}}\n[DEBUG] 2023-11-30T09:28:35  {topic : \"24e124785c421885/d/humidity\", payload :{\"humidity\":30.0,\"time\":1701304115113}}\n[DEBUG] 2023-11-30T09:28:38  {topic : \"24e124785c389010/d/temperature\", payload :{\"temperature\":20.0,\"time\":1701304118419}}\n[DEBUG] 2023-11-30T09:28:38  {topic : \"24e124785c389010/d/humidity\", payload :{\"humidity\":24.0,\"time\":1701304118419}}\n[DEBUG] 2023-11-30T09:28:38  {topic : \"24e124785c389010/d/temperature\", payload :{\"temperature\":20.0,\"time\":1701304118519}}\n[DEBUG] 2023-11-30T09:28:38  {topic : \"24e124785c389010/d/humidity\", payload :{\"humidity\":24.0,\"time\":1701304118519}}\n[DEBUG] 2023-11-30T09:28:46  {topic : \"24e124136d151547/d/temperature\", payload :{\"temperature\":18.7,\"time\":1701304126934}}\n[DEBUG] 2023-11-30T09:28:47  {topic : \"24e124136d151547/d/humidity\", payload :{\"humidity\":21.0,\"time\":1701304126934}}\n[DEBUG] 2023-11-30T09:28:50  {topic : \"24e124128c067999/d/temperature\", payload :{\"temperature\":20.900000000000002,\"time\":1701304130439}}\n[DEBUG] 2023-11-30T09:28:50  {topic : \"24e124128c067999/d/humidity\", payload :{\"humidity\":27.0,\"time\":1701304130439}}\n[DEBUG] 2023-11-30T09:28:50  {topic : \"24e124128c067999/d/co2\", payload :{\"co2\":1193.0,\"time\":1701304130439}}\n[INFO] 2023-11-30T09:30:36  DebugNode - start\n[INFO] 2023-11-30T09:30:36  MqttOutNode - start\n[INFO] 2023-11-30T09:30:36  MqttInNode - start\n[DEBUG] 2023-11-30T09:30:38  DebugNode {topic : \"24e124785c389010/d/temperature\", payload :{\"temperature\":20.1,\"time\":1701304238304}}\n[DEBUG] 2023-11-30T09:30:38  DebugNode {topic : \"24e124785c389010/d/humidity\", payload :{\"humidity\":24.0,\"time\":1701304238304}}\n[INFO] 2023-11-30T09:31:06  MqttInNode - start\n[INFO] 2023-11-30T09:31:06  MqttOutNode - start\n[INFO] 2023-11-30T09:31:06  DebugNode - start\n[DEBUG] 2023-11-30T09:31:14  DebugNode {topic : \"24e124785c389818/d/temperature\", payload :{\"temperature\":19.700000000000003,\"time\":1701304274481}}\n[DEBUG] 2023-11-30T09:31:14  DebugNode {topic : \"24e124785c389818/d/humidity\", payload :{\"humidity\":33.5,\"time\":1701304274481}}\n[DEBUG] 2023-11-30T09:31:18  DebugNode {topic : \"24e124128c140101/d/temperature\", payload :{\"temperature\":19.400000000000002,\"time\":1701304278993}}\n[DEBUG] 2023-11-30T09:31:19  DebugNode {topic : \"24e124128c140101/d/humidity\", payload :{\"humidity\":24.0,\"time\":1701304278993}}\n[DEBUG] 2023-11-30T09:31:19  DebugNode {topic : \"24e124128c140101/d/co2\", payload :{\"co2\":637.0,\"time\":1701304278993}}\n[DEBUG] 2023-11-30T09:31:34  DebugNode {topic : \"24e124136d151368/d/temperature\", payload :{\"temperature\":23.700000000000003,\"time\":1701304294230}}\n[DEBUG] 2023-11-30T09:31:34  DebugNode {topic : \"24e124136d151368/d/humidity\", payload :{\"humidity\":18.0,\"time\":1701304294230}}\n[DEBUG] 2023-11-30T09:31:35  DebugNode {topic : \"24e124785c421885/d/temperature\", payload :{\"temperature\":20.5,\"time\":1701304295132}}\n[DEBUG] 2023-11-30T09:31:35  DebugNode {topic : \"24e124785c421885/d/humidity\", payload :{\"humidity\":30.5,\"time\":1701304295132}}\n[DEBUG] 2023-11-30T09:31:38  DebugNode {topic : \"24e124785c389010/d/temperature\", payload :{\"temperature\":20.200000000000003,\"time\":1701304298239}}\n[DEBUG] 2023-11-30T09:31:38  DebugNode {topic : \"24e124785c389010/d/humidity\", payload :{\"humidity\":24.0,\"time\":1701304298239}}\n[DEBUG] 2023-11-30T09:31:38  DebugNode {topic : \"24e124785c389010/d/temperature\", payload :{\"temperature\":20.200000000000003,\"time\":1701304298339}}\n[DEBUG] 2023-11-30T09:31:38  DebugNode {topic : \"24e124785c389010/d/humidity\", payload :{\"humidity\":24.0,\"time\":1701304298340}}\n[DEBUG] 2023-11-30T09:31:38  DebugNode {topic : \"24e124126d152590/d/temperature\", payload :{\"temperature\":16.900000000000002,\"time\":1701304298740}}\n[DEBUG] 2023-11-30T09:31:38  DebugNode {topic : \"24e124126d152590/d/humidity\", payload :{\"humidity\":32.0,\"time\":1701304298740}}\n[DEBUG] 2023-11-30T09:31:38  DebugNode {topic : \"24e124126d152590/d/co2\", payload :{\"co2\":563.0,\"time\":1701304298740}}\n[DEBUG] 2023-11-30T09:31:44  DebugNode {topic : \"24e124126d152969/d/temperature\", payload :{\"temperature\":19.1,\"time\":1701304304453}}\n[DEBUG] 2023-11-30T09:31:44  DebugNode {topic : \"24e124126d152969/d/humidity\", payload :{\"humidity\":36.0,\"time\":1701304304453}}\n[DEBUG] 2023-11-30T09:31:46  DebugNode {topic : \"24e124136d151547/d/temperature\", payload :{\"temperature\":18.7,\"time\":1701304306758}}\n[DEBUG] 2023-11-30T09:31:46  DebugNode {topic : \"24e124136d151547/d/humidity\", payload :{\"humidity\":20.5,\"time\":1701304306758}}\n[DEBUG] 2023-11-30T09:31:46  DebugNode {topic : \"24e124136d151547/d/temperature\", payload :{\"temperature\":18.7,\"time\":1701304306858}}\n[DEBUG] 2023-11-30T09:31:47  DebugNode {topic : \"24e124136d151547/d/humidity\", payload :{\"humidity\":20.5,\"time\":1701304306858}}\n[DEBUG] 2023-11-30T09:31:50  DebugNode {topic : \"24e124128c067999/d/temperature\", payload :{\"temperature\":21.0,\"time\":1701304310066}}\n[DEBUG] 2023-11-30T09:31:50  DebugNode {topic : \"24e124128c067999/d/humidity\", payload :{\"humidity\":27.0,\"time\":1701304310066}}\n[DEBUG] 2023-11-30T09:31:50  DebugNode {topic : \"24e124128c067999/d/co2\", payload :{\"co2\":1238.0,\"time\":1701304310066}}\n[DEBUG] 2023-11-30T09:32:14  DebugNode {topic : \"24e124785c389818/d/temperature\", payload :{\"temperature\":19.700000000000003,\"time\":1701304334526}}\n[DEBUG] 2023-11-30T09:32:14  DebugNode {topic : \"24e124785c389818/d/humidity\", payload :{\"humidity\":33.5,\"time\":1701304334526}}\n[DEBUG] 2023-11-30T09:32:19  DebugNode {topic : \"24e124128c140101/d/temperature\", payload :{\"temperature\":19.400000000000002,\"time\":1701304339037}}\n[DEBUG] 2023-11-30T09:32:19  DebugNode {topic : \"24e124128c140101/d/humidity\", payload :{\"humidity\":23.5,\"time\":1701304339037}}\n[DEBUG] 2023-11-30T09:32:19  DebugNode {topic : \"24e124128c140101/d/co2\", payload :{\"co2\":640.0,\"time\":1701304339037}}\n[DEBUG] 2023-11-30T09:32:22  DebugNode {topic : \"24e124136d151485/d/temperature\", payload :{\"temperature\":20.900000000000002,\"time\":1701304342544}}\n[DEBUG] 2023-11-30T09:32:22  DebugNode {topic : \"24e124136d151485/d/humidity\", payload :{\"humidity\":23.0,\"time\":1701304342544}}\n[DEBUG] 2023-11-30T09:32:26  DebugNode {topic : \"24e124136d151561/d/temperature\", payload :{\"temperature\":15.200000000000001,\"time\":1701304346753}}\n[DEBUG] 2023-11-30T09:32:26  DebugNode {topic : \"24e124136d151561/d/humidity\", payload :{\"humidity\":32.0,\"time\":1701304346753}}\n[DEBUG] 2023-11-30T09:32:33  DebugNode {topic : \"24e124126d152919/d/temperature\", payload :{\"temperature\":20.900000000000002,\"time\":1701304353066}}\n[DEBUG] 2023-11-30T09:32:33  DebugNode {topic : \"24e124126d152919/d/humidity\", payload :{\"humidity\":24.5,\"time\":1701304353066}}\n[DEBUG] 2023-11-30T09:32:34  DebugNode {topic : \"24e124136d151368/d/temperature\", payload :{\"temperature\":23.700000000000003,\"time\":1701304354168}}\n[DEBUG] 2023-11-30T09:32:34  DebugNode {topic : \"24e124136d151368/d/humidity\", payload :{\"humidity\":18.0,\"time\":1701304354168}}\n[DEBUG] 2023-11-30T09:32:35  DebugNode {topic : \"24e124785c421885/d/temperature\", payload :{\"temperature\":20.5,\"time\":1701304355070}}\n[DEBUG] 2023-11-30T09:32:35  DebugNode {topic : \"24e124785c421885/d/humidity\", payload :{\"humidity\":30.5,\"time\":1701304355070}}\n[DEBUG] 2023-11-30T09:32:38  DebugNode {topic : \"24e124785c389010/d/temperature\", payload :{\"temperature\":20.200000000000003,\"time\":1701304358278}}\n[DEBUG] 2023-11-30T09:32:38  DebugNode {topic : \"24e124785c389010/d/humidity\", payload :{\"humidity\":24.0,\"time\":1701304358278}}\n[DEBUG] 2023-11-30T09:32:46  DebugNode {topic : \"24e124136d151547/d/temperature\", payload :{\"temperature\":18.8,\"time\":1701304366799}}\n[DEBUG] 2023-11-30T09:32:46  DebugNode {topic : \"24e124136d151547/d/humidity\", payload :{\"humidity\":20.5,\"time\":1701304366799}}\n[DEBUG] 2023-11-30T09:32:50  DebugNode {topic : \"24e124128c067999/d/temperature\", payload :{\"temperature\":20.900000000000002,\"time\":1701304370307}}\n[DEBUG] 2023-11-30T09:32:50  DebugNode {topic : \"24e124128c067999/d/humidity\", payload :{\"humidity\":26.5,\"time\":1701304370307}}\n[DEBUG] 2023-11-30T09:32:50  DebugNode {topic : \"24e124128c067999/d/co2\", payload :{\"co2\":1227.0,\"time\":1701304370307}}\n[DEBUG] 2023-11-30T09:33:14  DebugNode {topic : \"24e124785c389818/d/temperature\", payload :{\"temperature\":19.700000000000003,\"time\":1701304394458}}\n[DEBUG] 2023-11-30T09:33:14  DebugNode {topic : \"24e124785c389818/d/humidity\", payload :{\"humidity\":33.5,\"time\":1701304394458}}\n[DEBUG] 2023-11-30T09:33:14  DebugNode {topic : \"24e124785c389818/d/temperature\", payload :{\"temperature\":19.700000000000003,\"time\":1701304394558}}\n[DEBUG] 2023-11-30T09:33:14  DebugNode {topic : \"24e124785c389818/d/humidity\", payload :{\"humidity\":33.5,\"time\":1701304394558}}\n[DEBUG] 2023-11-30T09:33:18  DebugNode {topic : \"24e124128c140101/d/temperature\", payload :{\"temperature\":19.5,\"time\":1701304398968}}\n[DEBUG] 2023-11-30T09:33:19  DebugNode {topic : \"24e124128c140101/d/humidity\", payload :{\"humidity\":23.5,\"time\":1701304398968}}\n[DEBUG] 2023-11-30T09:33:19  DebugNode {topic : \"24e124128c140101/d/co2\", payload :{\"co2\":640.0,\"time\":1701304398968}}\n[DEBUG] 2023-11-30T09:33:19  DebugNode {topic : \"24e124128c140101/d/temperature\", payload :{\"temperature\":19.5,\"time\":1701304399068}}\n[DEBUG] 2023-11-30T09:33:19  DebugNode {topic : \"24e124128c140101/d/humidity\", payload :{\"humidity\":23.5,\"time\":1701304399068}}\n[DEBUG] 2023-11-30T09:33:19  DebugNode {topic : \"24e124128c140101/d/co2\", payload :{\"co2\":640.0,\"time\":1701304399068}}\n[DEBUG] 2023-11-30T09:33:34  DebugNode {topic : \"24e124136d151368/d/temperature\", payload :{\"temperature\":23.8,\"time\":1701304414200}}\n[DEBUG] 2023-11-30T09:33:34  DebugNode {topic : \"24e124136d151368/d/humidity\", payload :{\"humidity\":17.5,\"time\":1701304414200}}\n[DEBUG] 2023-11-30T09:33:34  DebugNode {topic : \"24e124136d151368/d/temperature\", payload :{\"temperature\":23.8,\"time\":1701304414300}}\n[DEBUG] 2023-11-30T09:33:34  DebugNode {topic : \"24e124136d151368/d/humidity\", payload :{\"humidity\":17.5,\"time\":1701304414300}}\n[DEBUG] 2023-11-30T09:33:35  DebugNode {topic : \"24e124785c421885/d/temperature\", payload :{\"temperature\":20.5,\"time\":1701304415101}}\n[DEBUG] 2023-11-30T09:33:35  DebugNode {topic : \"24e124785c421885/d/humidity\", payload :{\"humidity\":30.0,\"time\":1701304415101}}\n[DEBUG] 2023-11-30T09:33:38  DebugNode {topic : \"24e124785c389010/d/temperature\", payload :{\"temperature\":20.200000000000003,\"time\":1701304418307}}\n[DEBUG] 2023-11-30T09:33:38  DebugNode {topic : \"24e124785c389010/d/humidity\", payload :{\"humidity\":24.0,\"time\":1701304418307}}\n[DEBUG] 2023-11-30T09:33:38  DebugNode {topic : \"24e124785c389010/d/temperature\", payload :{\"temperature\":20.200000000000003,\"time\":1701304418408}}\n[DEBUG] 2023-11-30T09:33:38  DebugNode {topic : \"24e124785c389010/d/humidity\", payload :{\"humidity\":24.0,\"time\":1701304418408}}\n[DEBUG] 2023-11-30T09:33:40  DebugNode {topic : \"24e124126d152590/d/temperature\", payload :{\"temperature\":16.900000000000002,\"time\":1701304420612}}\n[DEBUG] 2023-11-30T09:33:40  DebugNode {topic : \"24e124126d152590/d/humidity\", payload :{\"humidity\":31.5,\"time\":1701304420612}}\n[DEBUG] 2023-11-30T09:33:40  DebugNode {topic : \"24e124126d152590/d/co2\", payload :{\"co2\":549.0,\"time\":1701304420612}}\n[DEBUG] 2023-11-30T09:33:46  DebugNode {topic : \"24e124126d152969/d/temperature\", payload :{\"temperature\":19.0,\"time\":1701304426424}}\n[DEBUG] 2023-11-30T09:33:46  DebugNode {topic : \"24e124126d152969/d/humidity\", payload :{\"humidity\":36.0,\"time\":1701304426424}}\n[DEBUG] 2023-11-30T09:33:46  DebugNode {topic : \"24e124136d151547/d/temperature\", payload :{\"temperature\":18.7,\"time\":1701304426825}}\n[DEBUG] 2023-11-30T09:33:46  DebugNode {topic : \"24e124136d151547/d/humidity\", payload :{\"humidity\":21.5,\"time\":1701304426825}}\n[DEBUG] 2023-11-30T09:33:50  DebugNode {topic : \"24e124128c067999/d/temperature\", payload :{\"temperature\":20.900000000000002,\"time\":1701304430032}}\n[DEBUG] 2023-11-30T09:33:50  DebugNode {topic : \"24e124128c067999/d/humidity\", payload :{\"humidity\":27.0,\"time\":1701304430032}}\n[DEBUG] 2023-11-30T09:33:50  DebugNode {topic : \"24e124128c067999/d/co2\", payload :{\"co2\":1227.0,\"time\":1701304430032}}\n[DEBUG] 2023-11-30T09:34:14  DebugNode {topic : \"24e124785c389818/d/temperature\", payload :{\"temperature\":19.700000000000003,\"time\":1701304454489}}\n[DEBUG] 2023-11-30T09:34:14  DebugNode {topic : \"24e124785c389818/d/humidity\", payload :{\"humidity\":33.0,\"time\":1701304454489}}\n[DEBUG] 2023-11-30T09:34:19  DebugNode {topic : \"24e124128c140101/d/temperature\", payload :{\"temperature\":19.6,\"time\":1701304458999}}\n[DEBUG] 2023-11-30T09:34:19  DebugNode {topic : \"24e124128c140101/d/humidity\", payload :{\"humidity\":23.5,\"time\":1701304458999}}\n[DEBUG] 2023-11-30T09:34:19  DebugNode {topic : \"24e124128c140101/d/co2\", payload :{\"co2\":625.0,\"time\":1701304458999}}\n[DEBUG] 2023-11-30T09:34:34  DebugNode {topic : \"24e124136d151368/d/temperature\", payload :{\"temperature\":23.900000000000002,\"time\":1701304474238}}\n[DEBUG] 2023-11-30T09:34:34  DebugNode {topic : \"24e124136d151368/d/humidity\", payload :{\"humidity\":17.5,\"time\":1701304474238}}\n[DEBUG] 2023-11-30T09:34:34  DebugNode {topic : \"24e124126d152919/d/temperature\", payload :{\"temperature\":21.0,\"time\":1701304474939}}\n[DEBUG] 2023-11-30T09:34:35  DebugNode {topic : \"24e124126d152919/d/humidity\", payload :{\"humidity\":24.5,\"time\":1701304474939}}\n[DEBUG] 2023-11-30T09:34:35  DebugNode {topic : \"24e124785c421885/d/temperature\", payload :{\"temperature\":20.5,\"time\":1701304475139}}\n[DEBUG] 2023-11-30T09:34:35  DebugNode {topic : \"24e124785c421885/d/humidity\", payload :{\"humidity\":30.0,\"time\":1701304475139}}\n[DEBUG] 2023-11-30T09:34:35  DebugNode {topic : \"24e124785c421885/d/temperature\", payload :{\"temperature\":20.5,\"time\":1701304475239}}\n[DEBUG] 2023-11-30T09:34:35  DebugNode {topic : \"24e124785c421885/d/humidity\", payload :{\"humidity\":30.0,\"time\":1701304475239}}\n[DEBUG] 2023-11-30T09:34:38  DebugNode {topic : \"24e124785c389010/d/temperature\", payload :{\"temperature\":20.3,\"time\":1701304478245}}\n[DEBUG] 2023-11-30T09:34:38  DebugNode {topic : \"24e124785c389010/d/humidity\", payload :{\"humidity\":24.0,\"time\":1701304478245}}\n[DEBUG] 2023-11-30T09:34:46  DebugNode {topic : \"24e124136d151547/d/temperature\", payload :{\"temperature\":18.7,\"time\":1701304486765}}\n[DEBUG] 2023-11-30T09:34:46  DebugNode {topic : \"24e124136d151547/d/humidity\", payload :{\"humidity\":21.0,\"time\":1701304486765}}\n[DEBUG] 2023-11-30T09:34:50  DebugNode {topic : \"24e124128c067999/d/temperature\", payload :{\"temperature\":20.900000000000002,\"time\":1701304490273}}\n[DEBUG] 2023-11-30T09:34:50  DebugNode {topic : \"24e124128c067999/d/humidity\", payload :{\"humidity\":27.0,\"time\":1701304490273}}\n[DEBUG] 2023-11-30T09:34:50  DebugNode {topic : \"24e124128c067999/d/co2\", payload :{\"co2\":1282.0,\"time\":1701304490273}}\n[DEBUG] 2023-11-30T09:35:14  DebugNode {topic : \"24e124785c389818/d/temperature\", payload :{\"temperature\":19.8,\"time\":1701304514533}}\n[DEBUG] 2023-11-30T09:35:14  DebugNode {topic : \"24e124785c389818/d/humidity\", payload :{\"humidity\":33.0,\"time\":1701304514533}}\n[DEBUG] 2023-11-30T09:35:18  DebugNode {topic : \"24e124128c140101/d/temperature\", payload :{\"temperature\":19.6,\"time\":1701304518942}}\n[DEBUG] 2023-11-30T09:35:19  DebugNode {topic : \"24e124128c140101/d/humidity\", payload :{\"humidity\":23.5,\"time\":1701304518942}}\n[DEBUG] 2023-11-30T09:35:19  DebugNode {topic : \"24e124128c140101/d/co2\", payload :{\"co2\":625.0,\"time\":1701304518942}}\n[DEBUG] 2023-11-30T09:35:34  DebugNode {topic : \"24e124136d151368/d/temperature\", payload :{\"temperature\":23.8,\"time\":1701304534179}}\n[DEBUG] 2023-11-30T09:35:34  DebugNode {topic : \"24e124136d151368/d/humidity\", payload :{\"humidity\":17.5,\"time\":1701304534179}}\n[DEBUG] 2023-11-30T09:35:34  DebugNode {topic : \"24e124136d151368/d/temperature\", payload :{\"temperature\":23.8,\"time\":1701304534279}}\n[DEBUG] 2023-11-30T09:35:34  DebugNode {topic : \"24e124136d151368/d/humidity\", payload :{\"humidity\":17.5,\"time\":1701304534279}}\n[DEBUG] 2023-11-30T09:35:35  DebugNode {topic : \"24e124785c421885/d/temperature\", payload :{\"temperature\":20.5,\"time\":1701304535080}}\n[DEBUG] 2023-11-30T09:35:35  DebugNode {topic : \"24e124785c421885/d/humidity\", payload :{\"humidity\":30.5,\"time\":1701304535080}}\n[DEBUG] 2023-11-30T09:35:38  DebugNode {topic : \"24e124785c389010/d/temperature\", payload :{\"temperature\":20.3,\"time\":1701304538286}}\n[DEBUG] 2023-11-30T09:35:38  DebugNode {topic : \"24e124785c389010/d/humidity\", payload :{\"humidity\":24.0,\"time\":1701304538286}}\n[DEBUG] 2023-11-30T09:35:42  DebugNode {topic : \"24e124126d152590/d/temperature\", payload :{\"temperature\":16.900000000000002,\"time\":1701304542496}}\n[DEBUG] 2023-11-30T09:35:42  DebugNode {topic : \"24e124126d152590/d/humidity\", payload :{\"humidity\":32.0,\"time\":1701304542496}}\n[DEBUG] 2023-11-30T09:35:42  DebugNode {topic : \"24e124126d152590/d/co2\", payload :{\"co2\":573.0,\"time\":1701304542496}}\n[DEBUG] 2023-11-30T09:35:42  DebugNode {topic : \"24e124126d152590/d/temperature\", payload :{\"temperature\":16.900000000000002,\"time\":1701304542596}}\n[DEBUG] 2023-11-30T09:35:42  DebugNode {topic : \"24e124126d152590/d/humidity\", payload :{\"humidity\":32.0,\"time\":1701304542596}}\n[DEBUG] 2023-11-30T09:35:43  DebugNode {topic : \"24e124126d152590/d/co2\", payload :{\"co2\":573.0,\"time\":1701304542596}}\n[DEBUG] 2023-11-30T09:35:46  DebugNode {topic : \"24e124136d151547/d/temperature\", payload :{\"temperature\":18.7,\"time\":1701304546807}}\n[DEBUG] 2023-11-30T09:35:46  DebugNode {topic : \"24e124136d151547/d/humidity\", payload :{\"humidity\":20.5,\"time\":1701304546807}}\n[DEBUG] 2023-11-30T09:35:48  DebugNode {topic : \"24e124126d152969/d/temperature\", payload :{\"temperature\":19.200000000000003,\"time\":1701304548011}}\n[DEBUG] 2023-11-30T09:35:48  DebugNode {topic : \"24e124126d152969/d/humidity\", payload :{\"humidity\":36.5,\"time\":1701304548011}}\n[DEBUG] 2023-11-30T09:35:49  DebugNode {topic : \"24e124128c067999/d/temperature\", payload :{\"temperature\":20.900000000000002,\"time\":1701304549915}}\n[DEBUG] 2023-11-30T09:35:50  DebugNode {topic : \"24e124128c067999/d/humidity\", payload :{\"humidity\":27.0,\"time\":1701304549915}}\n[DEBUG] 2023-11-30T09:35:50  DebugNode {topic : \"24e124128c067999/d/co2\", payload :{\"co2\":1282.0,\"time\":1701304549915}}\n[DEBUG] 2023-11-30T09:36:14  DebugNode {topic : \"24e124785c389818/d/temperature\", payload :{\"temperature\":19.8,\"time\":1701304574155}}\n[DEBUG] 2023-11-30T09:36:14  DebugNode {topic : \"24e124785c389818/d/humidity\", payload :{\"humidity\":33.0,\"time\":1701304574155}}\n[DEBUG] 2023-11-30T09:36:18  DebugNode {topic : \"24e124128c140101/d/temperature\", payload :{\"temperature\":19.8,\"time\":1701304578663}}\n[DEBUG] 2023-11-30T09:36:18  DebugNode {topic : \"24e124128c140101/d/humidity\", payload :{\"humidity\":23.0,\"time\":1701304578663}}\n[DEBUG] 2023-11-30T09:36:18  DebugNode {topic : \"24e124128c140101/d/co2\", payload :{\"co2\":632.0,\"time\":1701304578663}}\n[DEBUG] 2023-11-30T09:36:33  DebugNode {topic : \"24e124136d151368/d/temperature\", payload :{\"temperature\":23.900000000000002,\"time\":1701304593882}}\n[DEBUG] 2023-11-30T09:36:34  DebugNode {topic : \"24e124136d151368/d/humidity\", payload :{\"humidity\":17.5,\"time\":1701304593882}}\n[DEBUG] 2023-11-30T09:36:34  DebugNode {topic : \"24e124785c421885/d/temperature\", payload :{\"temperature\":20.5,\"time\":1701304594784}}\n[DEBUG] 2023-11-30T09:36:34  DebugNode {topic : \"24e124785c421885/d/humidity\", payload :{\"humidity\":30.5,\"time\":1701304594784}}\n[DEBUG] 2023-11-30T09:36:36  DebugNode {topic : \"24e124126d152919/d/temperature\", payload :{\"temperature\":20.900000000000002,\"time\":1701304596387}}\n[DEBUG] 2023-11-30T09:36:36  DebugNode {topic : \"24e124126d152919/d/humidity\", payload :{\"humidity\":24.5,\"time\":1701304596387}}\n[DEBUG] 2023-11-30T09:36:37  DebugNode {topic : \"24e124785c389010/d/temperature\", payload :{\"temperature\":20.3,\"time\":1701304597890}}\n[DEBUG] 2023-11-30T09:36:38  DebugNode {topic : \"24e124785c389010/d/humidity\", payload :{\"humidity\":24.0,\"time\":1701304597890}}\n[DEBUG] 2023-11-30T09:36:46  DebugNode {topic : \"24e124136d151547/d/temperature\", payload :{\"temperature\":18.6,\"time\":1701304606508}}\n[DEBUG] 2023-11-30T09:36:46  DebugNode {topic : \"24e124136d151547/d/humidity\", payload :{\"humidity\":20.5,\"time\":1701304606508}}\n[DEBUG] 2023-11-30T09:36:49  DebugNode {topic : \"24e124128c067999/d/temperature\", payload :{\"temperature\":20.900000000000002,\"time\":1701304609816}}\n[DEBUG] 2023-11-30T09:36:49  DebugNode {topic : \"24e124128c067999/d/humidity\", payload :{\"humidity\":27.0,\"time\":1701304609816}}\n[DEBUG] 2023-11-30T09:36:50  DebugNode {topic : \"24e124128c067999/d/co2\", payload :{\"co2\":1274.0,\"time\":1701304609816}}\n[DEBUG] 2023-11-30T09:37:14  DebugNode {topic : \"24e124785c389818/d/temperature\", payload :{\"temperature\":19.8,\"time\":1701304634181}}\n[DEBUG] 2023-11-30T09:37:14  DebugNode {topic : \"24e124785c389818/d/humidity\", payload :{\"humidity\":33.0,\"time\":1701304634181}}\n[DEBUG] 2023-11-30T09:37:18  DebugNode {topic : \"24e124128c140101/d/temperature\", payload :{\"temperature\":19.8,\"time\":1701304638588}}\n[DEBUG] 2023-11-30T09:37:18  DebugNode {topic : \"24e124128c140101/d/humidity\", payload :{\"humidity\":23.0,\"time\":1701304638588}}\n[DEBUG] 2023-11-30T09:37:18  DebugNode {topic : \"24e124128c140101/d/co2\", payload :{\"co2\":632.0,\"time\":1701304638588}}\n[DEBUG] 2023-11-30T09:37:18  DebugNode {topic : \"24e124128c140101/d/temperature\", payload :{\"temperature\":19.8,\"time\":1701304638688}}\n[DEBUG] 2023-11-30T09:37:19  DebugNode {topic : \"24e124128c140101/d/humidity\", payload :{\"humidity\":23.0,\"time\":1701304638688}}\n[DEBUG] 2023-11-30T09:37:19  DebugNode {topic : \"24e124128c140101/d/co2\", payload :{\"co2\":632.0,\"time\":1701304638688}}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/log/2023-11-30.log b/log/2023-11-30.log
--- a/log/2023-11-30.log	
+++ b/log/2023-11-30.log	
@@ -250,3 +250,18 @@
 [DEBUG] 2023-11-30T09:37:18  DebugNode {topic : "24e124128c140101/d/temperature", payload :{"temperature":19.8,"time":1701304638688}}
 [DEBUG] 2023-11-30T09:37:19  DebugNode {topic : "24e124128c140101/d/humidity", payload :{"humidity":23.0,"time":1701304638688}}
 [DEBUG] 2023-11-30T09:37:19  DebugNode {topic : "24e124128c140101/d/co2", payload :{"co2":632.0,"time":1701304638688}}
+[INFO] 2023-11-30T16:05:44  DebugNode - start
+[INFO] 2023-11-30T16:05:44  MqttOutNode - start
+[INFO] 2023-11-30T16:05:44  MqttInNode - start
+[INFO] 2023-11-30T16:07:07  MqttInNode - start
+[INFO] 2023-11-30T16:07:07  DebugNode - start
+[INFO] 2023-11-30T16:07:07  MqttOutNode - start
+[INFO] 2023-11-30T16:10:41  DebugNode - start
+[INFO] 2023-11-30T16:10:41  MqttInNode - start
+[INFO] 2023-11-30T16:10:41  MqttOutNode - start
+[INFO] 2023-11-30T16:12:35  DebugNode - start
+[INFO] 2023-11-30T16:12:35  MqttOutNode - start
+[INFO] 2023-11-30T16:12:35  MqttInNode - start
+[INFO] 2023-11-30T16:28:56  MqttInNode - start
+[INFO] 2023-11-30T16:28:56  MqttOutNode - start
+[INFO] 2023-11-30T16:28:56  DebugNode - start
